# -*- coding: utf-8 -*-
"""record&callClassifier.ipynb

Automatically generated by Colaboratory.1
Original file is located at
    https://colab.research.google.com/drive/1efwVhWDMwSOLFZMY6k6rrEjyYRnZ-Irf
"""

import os
import datetime
#import sounddevice as sd
import pyaudio
import wave
#from scipy.io.wavfile import write

samples_path = '/home/flexor/Music/buffer/'
chunk = 1024  # Record in chunks of 1024 samples
sample_format = pyaudio.paInt16  # 16 bits per sample
channels = 2
fs = 44100  # Record at 44100 samples per second
seconds = 3

p = pyaudio.PyAudio()  # Create an interface to PortAudio

print('Recording')

stream = p.open(format=sample_format,
                channels=channels,
                rate=fs,
                frames_per_buffer=chunk,
                input=True)


while True:
    timestamp = datetime.datetime.now().strftime('%Y_%m_%d-%H_%M_%S')
    filename = samples_path + timestamp + ".wav"
    frames = []
    for i in range(0, int(fs / chunk * seconds)):
        data = stream.read(chunk)
        frames.append(data)
    wf = wave.open(filename, 'wb')
    wf.setnchannels(channels)
    wf.setsampwidth(p.get_sample_size(sample_format))
    wf.setframerate(fs)
    wf.writeframes(b''.join(frames))
    wf.close()

    print(timestamp)

    #cmd = 'arecord -D hw:1,0 -t wav -f S16_LE -r 44100 -c 2 -d 3 ' + filename
    #os.system(cmd) #records a three second sample
